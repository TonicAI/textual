# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Slack Success Notification
      uses: slackapi/slack-github-action@v1.27.1
      with:
        payload: |
          {
            "text": "Release of Textual SDK ${{ github.event.release.name }} was a success",
            "channel": "${{ secrets.CHANNEL }}"
          }
      env:
        SLACK_WEBHOOK_URL: https://hooks.slack.com/services/${{ secrets.SLACK_CHANNEL_WEBHOOK }}
  notify_failure:
    name: Notify Failure
    if: failure()
    runs-on: ubuntu-22.04
    needs:
      - deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Slack Failure Notification
        uses: slackapi/slack-github-action@v1.27.1
        with:
          payload: |
            {
              "text": "ðŸ”¥ðŸ”¥ðŸ”¥ Textual SDK Release Failed Link: https://github.com/tonicai/textual/actions/runs/${{ github.run_id }}",
              "channel": "${{ secrets.CHANNEL }}"
            }
        env:
          SLACK_WEBHOOK_URL: https://hooks.slack.com/services/${{ secrets.SLACK_CHANNEL_WEBHOOK }}